1. 向上标记法 O(n)
2. 倍增
    fa[i, j] 表示从i开始，向上走2^j步所能走到的节点。0 <= j <= logn
    depth[i] 表示深度
    哨兵：如果从i开始跳2^j步会跳过根节点，那么fa[i, j] = 0 depth[0] = 0
    步骤：
      (1).先将两个点跳到同一层
      (2).让两个点同时往上跳，一直跳到它们的最近公共祖先的下一层
        j == 0 fa[i, j] = i的父节点
        j > 0  fa[i, j] = fa[fa[i, j - 1]][j - 1]
    预处理 O(nlogn)
    查询 O(logn)
3. Tarjan——离线求LCA O(n + m)
   在深度优先遍历时，将所有点分成三大类：
    (1).已经遍历过，且回溯过的点
    (2).正在搜索的分支
    (3).还未搜索到的点