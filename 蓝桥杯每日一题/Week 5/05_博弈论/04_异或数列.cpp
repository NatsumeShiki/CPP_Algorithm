// Alice 和 Bob 正在玩一个异或数列的游戏。

// 初始时，Alice 和 Bob 分别有一个整数 a
//  和 b
// （初始时，a,b
//  均为 0
// ），有一个给定的长度为 n
//  的公共数列 X1,X2,⋅⋅⋅,Xn
// 。

// Alice 和 Bob 轮流操作，Alice 先手，每步可以在以下两种选项中选一种：

// 选项 1
// ：从数列中选一个 Xi
//  给 Alice 的数异或上，或者说令 a
//  变为 a⊕Xi
// 。（其中 ⊕
//  表示按位异或）
// 选项 2
// ：从数列中选一个 Xi
//  给 Bob 的数异或上，或者说令 b
//  变为 b⊕Xi
// 。
// 每个数 Xi
//  都只能用一次，当所有 Xi
//  均被使用后（n
//  轮后）游戏结束。

// 游戏结束时，拥有的数比较大的一方获胜，如果双方数值相同，即为平手。

// 现在双方都足够聪明，都采用最优策略，请问谁能获胜？

// 输入格式
// 每个评测用例包含多组询问。询问之间彼此独立。

// 输入的第一行包含一个整数 T
// ，表示询问数。

// 接下来 T
//  行每行包含一组询问。其中第 i
//  行的第一个整数 ni
//  表示数列长度，随后 ni
//  个整数 X1,X2,⋅⋅⋅,Xni
//  表示数列中的每个数。

// 输出格式
// 输出 T
//  行，依次对应每组询问的答案。

// 每行包含一个整数 1、0
//  或 −1
//  分别表示 Alice 胜、平局或败。

// 数据范围
// 对于所有评测用例，1≤T≤2×105
// ，1≤∑i=1Tni≤2×105
// ，0≤Xi<220
// 。

// 输入样例：
// 4
// 1 1
// 1 0
// 2 2 1
// 7 992438 1006399 781139 985280 4729 872779 563580
// 输出样例：
// 1
// 0
// 1
// 1

#include<iostream>
#include<cstring>
using namespace std;

const int N = 20;

int main(){
    int T;
    scanf("%d", &T);
    
    while(T--){
        int cnt[N] = {0};
        int n;
        scanf("%d", &n);
        int sum = 0;
        
        for(int i = 0; i < n; i++){
            int x;
            scanf("%d", &x);
            sum ^= x;
            for(int j = 0; j < N; j++)
                cnt[j] += x >> j & 1;
        }
        
        if(!sum) puts("0");
        else{
            for(int i = N - 1; i >= 0; i--){
                if(sum >> i & 1){
                    if(cnt[i] == 1) puts("1");
                    else if((n - cnt[i]) % 2 == 0) puts("1");
                    else puts("-1");
                    break;
                }
            }
        }
    }
}